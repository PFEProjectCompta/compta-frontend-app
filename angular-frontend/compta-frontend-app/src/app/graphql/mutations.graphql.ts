import gql from "graphql-tag";

const ADD_ROLE=gql`
  mutation($id:String){
    addRole(id:$id)
  }
`

const REMOVE_ROLE=gql`
  mutation($id:String){
    removeRole(id:$id)
  }
`
const ADD_ADMIN=gql`
  mutation($id:String,$nom:String,$prenom:String,$email:String){
    ajouterBureauAdmineWithId(admineBureauWithIdDTO:{
      id:$id,
      nom:$nom,
      prenom:$prenom,
      email:$email
    }){
      id
      nom
      prenom
      email
    }
  }
`

const REMOVE_ADMIN=gql`
  mutation($id:String){
    supprimerBureauAdmine(id:$id){
      id
      nom
      prenom
      email
    }
  }
`

const ADD_BUREAU=gql`
  mutation($nom:String,$adresse:String,$ville:String,$pays:String,
    $numero_tele:String,$email:String,$admineId:String){
    ajouterBureau(bureauDTO:{
      nom:$nom,
      adresse:$adresse,
      ville:$ville,
      paye:$pays,
      numero_tele:$numero_tele,
      email:$email,
      admineId:$admineId
    }){
      id
      nom
      adresse
      ville
      paye
      numero_tele
      email
    }
  }
`

const UPDATE_BUREAU=gql`
  mutation($idBureau:String,$nom:String,$adresse:String,
    $ville:String,$paye:String,$numero_tele:String,
    $email:String,$adminId:String){
    modifierBureau(bureauDTO:{
      nom:$nom
      adresse:$adresse
      ville:$ville
      paye:$paye
      numero_tele:$numero_tele
      email:$email
      admineId:$adminId
    },id:$idBureau){
      id
      nom
      adresse
      ville
      paye
      numero_tele
      email
      admine{
        id
        nom
        prenom
        email
      }
    }
  }
`

const REMOVE_BUREAU=gql`
  mutation($id:String){
    supprimerBureau(id:$id){
      id
      nom
      adresse
      ville
      paye
      numero_tele
      email
      admine{
        id
        nom
        prenom
        email

      }
    }
  }
`
const ADD_COMPTE_UTILISATEUR=gql`
  mutation($id:String,$nom:String,$prenom:String,$email:String,
    $adresse:String,$ville:String,$pays:String,
    $telephone:String,$date_naissance:String,
    $actif:Boolean,$bureauId:String){
    ajouterCompteUtilisateurWithIdKeycloak(compteUtilisateurDTOWithId:{
      id:$id,
      nom:$nom,
      prenom:$prenom,
      email:$email,
      adresse:$adresse,
      ville:$ville,
      pays:$pays,
      telephone:$telephone,
      date_naissance:$date_naissance,
      actif:$actif,
      bureauId:$bureauId
    }){
      id
      nom
      prenom
      email
      adresse
      ville
      pays
      telephone
      date_naissance
      bureau{
        id
        nom
        adresse
        ville
        paye
        numero_tele
        email
        admine{
          id
          nom
          prenom
        }
      }

    }
  }
`

const REMOVE_COMPTE_UTILISATEUR=gql`
  mutation($id:String){
    supprimerCompteUtilisateur(id:$id){
      id
      nom
      prenom
      email
      adresse
      ville
      pays
      telephone
      date_naissance
      actif
      bureau{
        id
        nom
        adresse
      }
    }
  }
`

const ADD_KEYCLOAK_USER=gql`
  mutation($userName:String,$email:String,
    $pass:String,$firstName:String,$lastName:String){
    addUser(userKeycloak:{
      userName:$userName,
      email:$email,
      password:$pass,
      firstname:$firstName,
      lastName:$lastName
    })
  }
`

const ADD_USER_ROLE=gql`
  mutation($id:String){
    addUserRole(id:$id)
  }
`

const REMOVE_USER_ROLE=gql`
  mutation($id:String){
    removeUserRole(id:$id)
  }
`
const UPDATE_COMPTE_UTILISATEUR_ACTIF=gql`
  mutation($id:String,$actif:Boolean,){
    modifierCompteUtilisateur(compteUtilisateurDTO:{
      actif:$actif,
    },id:$id){
      id
      nom
      prenom
      email
      adresse
      ville
      pays
    }
  }
`
const UPDATE_COMPTE_UTILISATEUR=gql`
  mutation($idCOmpteUser:String,$nom:String,$prenom:String,$email:String,
    $adresse:String,$ville:String,$pays:String,
    $telephone:String,$date_naissance:String,$actif:Boolean,
    $bureauId:String){
    modifierCompteUtilisateur(compteUtilisateurDTO:{
      nom:$nom,
      prenom:$prenom,
      email:$email,
      adresse:$adresse,
      ville:$ville,
      pays:$pays,
      telephone:$telephone,
      date_naissance:$date_naissance,
      actif:$actif,
      bureauId:$bureauId
    },id:$idCOmpteUser){
      id
      nom
      prenom
      email
      adresse
      ville
      pays
    }
  }
`
const ADD_SOCIETE=gql`
  mutation($raison_social:String,$activite:String,
    $adresse:String,$compteUtilisateurId:String,
    $ville:String,$pays:String,$devise:String,
    $forme_juridique:String,$capital:Float,$telephone:String,
    $email:String,$site_internet:String,$num_dossier:String,
    $identifiant_TVA:String){
    ajouterSociete(societeDTO:{
      raison_social:$raison_social,
      activite:$activite,
      adresse:$adresse,
      compteUtilisateurId:$compteUtilisateurId,
      ville:$ville,
      pays:$pays,
      devise:$devise,
      forme_juridique:$forme_juridique,
      capital:$capital,
      telephone:$telephone,
      email:$email,
      site_internet:$site_internet,
      num_dossier:$num_dossier,
      identifiant_TVA:$identifiant_TVA
    }){
      id
      raison_social
      activite
      adresse
    }
  }
`
const UPDATE_SOCIETE=gql`
  mutation($raison_social:String,$activite:String,
    $adresse:String,$compteUtilisateurId:String,
    $ville:String,$pays:String,$devise:String,
    $forme_juridique:String,$capital:Float,$telephone:String,
    $email:String,$site_internet:String,$num_dossier:String,
    $identifiant_TVA:String,$idSociete:String){
    modifierSociete(societeDTO:{
      raison_social:$raison_social,
      activite:$activite,
      adresse:$adresse,
      compteUtilisateurId:$compteUtilisateurId,
      ville:$ville,
      pays:$pays,
      devise:$devise,
      forme_juridique:$forme_juridique,
      capital:$capital,
      telephone:$telephone,
      email:$email,
      site_internet:$site_internet,
      num_dossier:$num_dossier,
      identifiant_TVA:$identifiant_TVA
    },id:$idSociete){
      id
      raison_social
      activite
      adresse
      compteUtilisateur{
        id
        nom
        prenom
      }
      ville
      pays
      devise
      forme_juridique
      capital
      telephone
      email
      site_internet
      num_dossier
      identifiant_TVA
    }
  }
`
const REMOVE_SOCIETE=gql`
  mutation($id:String){
    supprimerSociete(id:$id){
      id
    }
  }
`

const ADD_MEMBER_TO_SOCIETE=gql`
  mutation($id_societe:String,$createur:String,$member:String){
    ajouterSocieteMember(societeMemberDTO:{
      id_societe:$id_societe,
      createur:$createur,
      member:$member
    }){
      id
      societe{
        id
      }
      createur{
        id
        nom
        prenom
        email
        ville
      }
      member{
        id
        nom
        prenom
        email
        ville
      }
    }
  }
`
const REMOVE_MEMBER_TO_SOCIETE=gql`
  mutation($id:String){
    supprimerSocieteMember(id:$id){
      id
      societe{
        id
      }
      createur{
        id
        nom
        prenom
        email
        ville
      }
      member{
        id
        nom
        prenom
        email
        ville
      }
    }
  }
`
const ADD_COMPTES_GENERAUX_SOCIETE=gql`
  mutation($id:String){
    ajouterCompteGeneralAll(idSociete:$id){
      id
      natureCompte
      debutFaurchette
      finFaurchette
      idSociete
    }
  }
`
const Modifier_COMPTES_GENERAUX=gql`
  mutation($id:String,$debut:String,$fin:String){
    modifierCompteGeneral(compteGeneralDTO:{
      debutFaurchette:$debut,
      finFaurchette:$fin
    },id:$id){
      id
      natureCompte
      debutFaurchette
      finFaurchette
      idSociete
    }
  }
`

const AJOUTER_PLANCOMPATNLE_ELEMENT=gql`
  mutation($num:String,$intit:String,$societeId:String){
    ajouterplanComptableElementSociete(planComptableElementSocieteDTO:{
      numeroCompte:$num,
      intitule:$intit
      societeId:$societeId
    }){
      id
      numeroCompte
      intitule
      reporter
      compteGeneral{
        id
        natureCompte
        debutFaurchette
        idSociete
      }
      societeId
    }
  }
`
const MODIFIER_PLANCOMPATNLE_ELEMENT=gql`
  mutation($id:String,$num:String,$intit:String,$compGen:String){
    modifierplanComptableElement(planComptableElementDTO:{
      numeroCompte:$num,
      intitule:$intit,
      compteGeneralId:$compGen
    },id:$id){
      id
      numeroCompte
      intitule
      reporter
      compteGeneral{
        id
        natureCompte
        debutFaurchette
        finFaurchette
        idSociete
      }
      societeId
    }
  }
`
const SUPPRIMER_PLANCOMPATNLE_ELEMENT=gql`
  mutation($id:String){
    supprimerplanComptableElement(id:$id){
      id
      numeroCompte
      intitule
      compteGeneral{
        id
        natureCompte
      }
      societeId
    }
  }
`

const AJOUTE_AGENCE=gql`
  mutation($nom:String,$complemet:String,$codePost:String,$ville:String,$pays:String,
    $idSociete:String){
    ajouterAgence(agenceDTO:{
      nom:$nom,
      complement:$complemet,
      code_postale:$codePost,
      ville:$ville,
      pays:$pays,
      societeId:$idSociete
    }){
      id
      nom
      complement
      code_postale
      ville
      pays
      societeId
    }
  }
`
const MODIFIER_AGENCE=gql`
  mutation($id:String,$nom:String,$complemet:String,$codePost:String,$ville:String,$pays:String,$societeId:String){
    modifierAgence(agenceDTO:{
      nom:$nom,
      complement:$complemet,
      code_postale:$codePost,
      ville:$ville,
      pays:$pays,
      societeId:$societeId
    },id:$id){
      id
      nom
      complement
      code_postale
      ville
      pays
      societeId
    }
  }
`
const SUPPRIMER_AGENCE=gql`
  mutation($id:String){
    supprimerAgence(id:$id){
      id
      nom
      complement
      code_postale
      ville
      pays
      societeId
    }
  }
`
const AJOUTER_BANQUE=gql`
  mutation($abrege:String,$intitule:String,$interlocuteur:String,
    $codeBIC:String,$adresse:String,$code_postale:String,
    $ville:String,$pays:String,$telephone:String,$telecopie:String,
    $email:String,$site_internet:String,$idAgence:String){
    ajouterBanque(banqueDTO:{
      abrege:$abrege
      intitule:$intitule
      interlocuteur:$interlocuteur
      codeBIC:$codeBIC
      adresse:$adresse
      code_postale:$code_postale
      ville:$ville
      pays:$pays
      telephone:$telephone
      telecopie:$telecopie
      email:$email
      site_internet:$site_internet,
      agenceId:$idAgence
    }){
      id
      abrege
      intitule
      interlocuteur
      codeBIC
      adresse
      code_postale
      ville
      pays
      telephone
      telecopie
      email
      site_internet
    }
  }
`
const MODIFIER_BANQUE=gql`
  mutation($id:String,$abrege:String,$intitule:String,$interlocuteur:String,
    $codeBIC:String,$adresse:String,$code_postale:String,
    $ville:String,$pays:String,$telephone:String,$telecopie:String,
    $email:String,$site_internet:String,$idAgence:String){
    modifierBanque(banqueDTO:{
      abrege:$abrege
      intitule:$intitule
      interlocuteur:$interlocuteur
      codeBIC:$codeBIC
      adresse:$adresse
      code_postale:$code_postale
      ville:$ville
      pays:$pays
      telephone:$telephone
      telecopie:$telecopie
      email:$email
      site_internet:$site_internet,
      agenceId:$idAgence
    },id:$id){
      id
      abrege
      intitule
      interlocuteur
      codeBIC
      adresse
      code_postale
      ville
      pays
      telephone
      telecopie
      email
      site_internet
    }
  }
`
const SUPPRIMER_BANQUE=gql`
  mutation($id:String){
    supprimerBanque(id:$id){
      id
      abrege
      intitule
      interlocuteur
      codeBIC
      adresse
      code_postale
      ville
      pays
      telephone
      telecopie
      email
      site_internet
    }
  }
`

const AJOUTER_COMPTE_CANCAIRE=gql`
  mutation($abrege:String,$devise:String,$pays:String,
    $structure:String,$num_compte:String,$num_guichet:String,
    $idBanque:String, $planComptableElementId:String){
    ajouterCompteBancaire(compteBancaireDTO:{
      abrege:$abrege,
      devise:$devise,
      pays:$pays,
      structure:$structure,
      num_compte:$num_compte,
      num_guichet:$num_guichet,
      banqueId:$idBanque,
      planComptableElementId:$planComptableElementId
    }){
      id
      abrege
      devise
      pays
      structure
      num_compte
      num_guichet
      planComptableElementId
      banque{
        id
        abrege
      }
    }
  }
`
const MODIFIER_COMPTE_CANCAIRE=gql`
  mutation($id:String,$abrege:String,$devise:String,$pays:String,
    $structure:String,$num_compte:String,$num_guichet:String,
    $idBanque:String, $planComptableElementId:String){
    modifierCompteBancaire(compteBancaireDTO:{
      abrege:$abrege,
      devise:$devise,
      pays:$pays,
      structure:$structure,
      num_compte:$num_compte,
      num_guichet:$num_guichet,
      banqueId:$idBanque,
      planComptableElementId:$planComptableElementId
    },id:$id){
      id
      abrege
      devise
      pays
      structure
      num_compte
      num_guichet
      planComptableElementId
      banque{
        id
        abrege
      }
    }
  }
`
const SUPPRIMER_COMPTE_CANCAIRE=gql`
  mutation($id:String){
    supprimerCompteBancaire(id:$id){
      id
      abrege
      devise
      pays
      structure
      num_compte
      num_guichet
      planComptableElementId
      banque{
        id
        abrege
      }
    }
  }
`
const AJOUTE_CONTACT=gql`
  mutation($type_contact:String,$civilite:String,
    $nom:String,$prenom:String,$service:String,
    $fonction:String,$telephone:String,$portable:String,
    $email:String,$telecopie:String,$banqueId:String){
    ajouterContact(contactDTO:{
      type_contact:$type_contact,
      civilite:$civilite,
      nom:$nom,
      prenom:$prenom,
      service:$service,
      fonction:$fonction,
      telephone:$telephone,
      portable:$portable,
      email:$email,
      telecopie:$telecopie,
      banqueId:$banqueId
    }){
      id
      type_contact
      civilite
      nom
      prenom
      service
      fonction
      telephone
      portable
      email
      telecopie
      banque{
        id
      }
    }
  }
`
const MODIFIER_CONTACT=gql`
  mutation($id:String,$type_contact:String,$civilite:String,
    $nom:String,$prenom:String,$service:String,
    $fonction:String,$telephone:String,$portable:String,
    $email:String,$telecopie:String,$banqueId:String){
    modifierContact(contactDTO:{
      type_contact:$type_contact,
      civilite:$civilite,
      nom:$nom,
      prenom:$prenom,
      service:$service,
      fonction:$fonction,
      telephone:$telephone,
      portable:$portable,
      email:$email,
      telecopie:$telecopie,
      banqueId:$banqueId
    },id:$id){
      id
      type_contact
      civilite
      nom
      prenom
      service
      fonction
      telephone
      portable
      email
      telecopie
      banque{
        id
      }
    }
  }
`
const SUPPRIMER_CONTACT=gql`
  mutation($id:String){
    supprimerContact(id:$id){
      id
      type_contact
      civilite
      nom
      prenom
      service
      fonction
      telephone
      portable
      email
      telecopie
      banque{
        id
      }
    }
  }
`

const AJOUTE_FOURNISSEUR=gql`
  mutation($nom:String,$prenom:String,$email:String,
    $adresse:String,$ville:String,$pays:String,$telephone:String,
    $societeId:String,$planComptableElementId:String){
    ajouterFournisseur(fournisseurDTO:{
      nom:$nom
      prenom:$prenom
      email:$email
      adresse:$adresse
      ville:$ville
      pays:$pays
      telephone:$telephone
      societeId:$societeId
      planComptableElementId:$planComptableElementId
    }){
      id
      nom
      prenom
      email
      adresse
      ville
      pays
      telephone
      societeId

      planComptableElementId
      planComptableElement{
        id
        numeroCompte
        intitule
        compteGeneral{
          id
          natureCompte
          debutFaurchette
          finFaurchette
        }
      }
    }
  }
`
const MODIFIER_FOURNISSEUR=gql`
  mutation($id:String,$nom:String,$prenom:String,$email:String,
    $adresse:String,$ville:String,$pays:String,$telephone:String,
    $societeId:String,$planComptableElementId:String){
    modifierFournisseur(fournisseurDTO:{
      nom:$nom
      prenom:$prenom
      email:$email
      adresse:$adresse
      ville:$ville
      pays:$pays
      telephone:$telephone
      societeId:$societeId
      planComptableElementId:$planComptableElementId

    },id:$id){
      id
      nom
      prenom
      email
      adresse
      ville
      pays
      telephone
      societeId
      planComptableElementId
      planComptableElement{
        id
        numeroCompte
        intitule
        compteGeneral{
          id
          natureCompte
          debutFaurchette
          finFaurchette
        }
      }
    }
  }
`
const SUPPRIMER_FOURNISSEUR=gql`
  mutation($id:String){
    supprimerFournisseur(id:$id){
      id
      nom
      prenom
      email
      adresse
      ville
      pays
      telephone
      societeId
      planComptableElementId
      planComptableElement{
        id
        numeroCompte
        intitule
        compteGeneral{
          id
          natureCompte
          debutFaurchette
          finFaurchette
        }
      }
    }
  }
`

const AJOUTE_CLIENT=gql`
  mutation($nom:String,$prenom:String,$email:String,
    $adresse:String,$ville:String,$pays:String,$telephone:String,
    $societeId:String,$planComptableElementId:String){
    ajouterClient(clientDTO:{
      nom:$nom
      prenom:$prenom
      email:$email
      adresse:$adresse
      ville:$ville
      pays:$pays
      telephone:$telephone
      societeId:$societeId
      planComptableElementId:$planComptableElementId
    }){
      id
      nom
      prenom
      email
      adresse
      ville
      pays
      telephone
      societeId

      planComptableElementId
      planComptableElement{
        id
        numeroCompte
        intitule
        compteGeneral{
          id
          natureCompte
          debutFaurchette
          finFaurchette
        }
      }
    }
  }
`
const MODIFIER_CLIENT=gql`
  mutation($id:String,$nom:String,$prenom:String,$email:String,
    $adresse:String,$ville:String,$pays:String,$telephone:String,
    $societeId:String,$planComptableElementId:String){
    modifierClient(clientDTO:{
      nom:$nom
      prenom:$prenom
      email:$email
      adresse:$adresse
      ville:$ville
      pays:$pays
      telephone:$telephone
      societeId:$societeId
      planComptableElementId:$planComptableElementId
    },id:$id){
      id
      nom
      prenom
      email
      adresse
      ville
      pays
      telephone
      societeId
      planComptableElementId
      planComptableElement{
        id
        numeroCompte
        intitule
        compteGeneral{
          id
          natureCompte
          debutFaurchette
          finFaurchette
        }
      }
    }
  }

`
const SUPPRIMER_CLIENT=gql`
  mutation($id:String){
    supprimerClient(id:$id){
      id
      nom
      prenom
      email
      adresse
      ville
      pays
      telephone
      societeId
      planComptableElementId
      planComptableElement{
        id
        numeroCompte
        intitule
        compteGeneral{
          id
          natureCompte
          debutFaurchette
          finFaurchette
        }
      }
    }
  }
`

const AJOUTE_SALARIEE=gql`
  mutation($nom:String,$prenom:String,$email:String,
    $adresse:String,$ville:String,$pays:String,$telephone:String,
    $societeId:String,$planComptableElementId:String){
    ajouterSalariee(salarieeDTO:{
      nom:$nom
      prenom:$prenom
      email:$email
      adresse:$adresse
      ville:$ville
      pays:$pays
      telephone:$telephone
      societeId:$societeId
      planComptableElementId:$planComptableElementId
    }){
      id
      nom
      prenom
      email
      adresse
      ville
      pays
      telephone
      societeId
      planComptableElementId
      planComptableElement{
        id
        numeroCompte
        intitule
        compteGeneral{
          id
          natureCompte
          debutFaurchette
          finFaurchette
        }
      }
    }
  }
`
const MODIFIER_SALARIEE=gql`
  mutation($id:String,$nom:String,$prenom:String,$email:String,
    $adresse:String,$ville:String,$pays:String,$telephone:String,
    $societeId:String,$planComptableElementId:String){
    modifierSalariee(salarieeDTO:{
      nom:$nom
      prenom:$prenom
      email:$email
      adresse:$adresse
      ville:$ville
      pays:$pays
      telephone:$telephone
      societeId:$societeId
      planComptableElementId:$planComptableElementId
    },id:$id){
      id
      nom
      prenom
      email
      adresse
      ville
      pays
      telephone
      societeId
      planComptableElementId
      planComptableElement{
        id
        numeroCompte
        intitule
        compteGeneral{
          id
          natureCompte
          debutFaurchette
          finFaurchette
        }
      }
    }
  }
`
const SUPPRIMER_SALARIEE=gql`
  mutation($id:String){
    supprimerSalariee(id:$id){
      id
      nom
      prenom
      email
      adresse
      ville
      pays
      telephone
      societeId
      planComptableElementId
      planComptableElement{
        id
        numeroCompte
        intitule
        compteGeneral{
          id
          natureCompte
          debutFaurchette
          finFaurchette
        }
      }
    }
  }
`


const AJOUTE_EXERCICE=gql`
  mutation($date_debut:String,$date_fin:String,$societeId:String){
    ajouterExercice(exercice:{
      date_debut:$date_debut,
      date_fin:$date_fin,
      societeId:$societeId
    }){
      id
      date_debut
      date_fin
      societeId

    }
  }
`
const MODIFIER_EXERCICE=gql`
  mutation($id:String,$date_debut:String,$date_fin:String,$societeId:String){
    modifierExercice(exercice:{
      date_debut:$date_debut,
      date_fin:$date_fin,
      societeId:$societeId
    },id:$id){
      id
      date_debut
      date_fin
      societeId
    }
  }
`
const AJOUTE_CODE_JOURNAL=gql`
  mutation($code:String,$intitule_journale:String,
    $type_journal:String,$exerciceId:String){
    ajouterCodeJournal(codeJournauxDTO:{
      code:$code,
      intitule_journale:$intitule_journale,
      type_journal:$type_journal,
      exerciceId:$exerciceId
    }){
      id
      code
      intitule_journale
      type_journal
      exercice{
        id
        date_debut
        date_fin
        societeId
      }

    }
  }
`
const MODIFIER_CODE_JOURNAL=gql`
  mutation($id:String,$code:String,$intitule_journale:String,
    $type_journal:String,$exerciceId:String){
    modifierCodeJournal(codeJournauxDTO:{
      code:$code,
      intitule_journale:$intitule_journale,
      type_journal:$type_journal,
      exerciceId:$exerciceId
    },id:$id){
      id
      code
      intitule_journale
      type_journal
      exercice{
        id
        date_debut
        date_fin
        societeId
      }
    }
  }
`

const SUPPRIMER_CODE_JOURNAL=gql`
  mutation($id:String){
    supprimerCodeJournal(id:$id){
      id
      code
      intitule_journale
      type_journal
      exercice{
        id
        date_debut
        date_fin
        societeId
      }
    }
  }
`

const AJOUTE_SAISIE_JOURNAL=gql`
  mutation($position:String,$periode:String,$code:String,
    $intitule_journale:String,$code_Journal_id:String){
    ajouterSaisieJournaux(saisiJournal:{
      position:$position,
      periode:$periode,
      code:$code,
      intitule_journale:$intitule_journale,
      code_Journal_id:$code_Journal_id
    }){
      id
      position
      periode
      code
      intitule_journale
      code_Journal{
        id
        code
        intitule_journale
        type_journal
      }
    }
  }
`
const AJOUTE_ALL_SAISIE_JOURNAL=gql`
  mutation($id:String){
    ajouterAllSaisieJournaux(idCodeJournal:$id)
  }
`
const MODIFIER_SAISIE_JOURNAL=gql`
  mutation($id:String$position:String,$periode:String,$code:String,
    $intitule_journale:String,$code_Journal_id:String){
    updateSaisieJournaux(saisiJournal:{
      position:$position,
      periode:$periode,
      code:$code,
      intitule_journale:$intitule_journale,
      code_Journal_id:$code_Journal_id
    },id:$id){
      id
      position
      periode
      code
      intitule_journale
      classement
      code_Journal{
        id
        code
        type_journal
        exercice{
          id
        }
      }
    }
  }
`
const SUPPRIMER_SAISIE_JOURNAL=gql`
  mutation($id:String){
    deleteSaisieJournaux(id:$id){
      id
    }
  }
`


const AJOUTER_JOURNAL=gql`
  mutation($jour:Int,$numFacture:String,$ref:String,
    $numCompteId:String,$numCompteTiereId:String,
    $libelle:String,$credit:Float,$debit:Float,
    $saisieJournauxId:String){
    ajouterJournale(journalDTO:{
      jour:$jour,
      numFacture:$numFacture,
      ref:$ref,
      numCompteId:$numCompteId,
      numCompteTiereId:$numCompteTiereId,
      libelle:$libelle,
      credit:$credit,
      debit:$debit,
      saisieJournauxId:$saisieJournauxId
    }){
      id
      jour
      numFacture
      ref
      numCompteId
      numCompteTiereId
      libelle
      credit
      debit
      numCompte{
        id
        numeroCompte
        intitule
      }
      numCompteTiere{
        id
        numeroCompte
        intitule
      }
      saisieJournaux{
        id
        position
        periode
        intitule_journale
      }
    }
  }
`
const MODIFIER_JOURNAL=gql`
  mutation($id:String,$jour:Int,$numFacture:String,$ref:String,
    $numCompteId:String,$numCompteTiereId:String,
    $libelle:String,$credit:Float,$debit:Float,
    $saisieJournauxId:String){
    updateJournale(journalDTO:{
      jour:$jour,
      numFacture:$numFacture,
      ref:$ref,
      numCompteId:$numCompteId,
      numCompteTiereId:$numCompteTiereId,
      libelle:$libelle,
      credit:$credit,
      debit:$debit,
      saisieJournauxId:$saisieJournauxId
    },id:$id){
      id
      jour
      numFacture
      ref
      numCompteId
      numCompteTiereId
      libelle
      credit
      debit
      numCompte{
        id
        numeroCompte
        intitule
      }
      numCompteTiere{
        id
        numeroCompte
        intitule
      }
      saisieJournaux{
        id
        position
        periode
        intitule_journale
      }
    }
  }
`
const SUPPRIMER_JOURNAL=gql`
  mutation($id:String){
    deleteJournale(id:$id){
      id
      jour
      numFacture
      ref
      numCompteId
      numCompteTiereId
      libelle
      credit
      debit
      numCompte{
        id
        numeroCompte
        intitule
      }
      numCompteTiere{
        id
        numeroCompte
        intitule
      }
      saisieJournaux{
        id
        position
        periode
        intitule_journale
      }
    }
  }
`

export {ADD_ROLE,REMOVE_ROLE,ADD_ADMIN,REMOVE_ADMIN,ADD_BUREAU,UPDATE_BUREAU,REMOVE_BUREAU,
  ADD_COMPTE_UTILISATEUR,REMOVE_COMPTE_UTILISATEUR,ADD_KEYCLOAK_USER,ADD_USER_ROLE,REMOVE_USER_ROLE,
  UPDATE_COMPTE_UTILISATEUR_ACTIF,UPDATE_COMPTE_UTILISATEUR,ADD_SOCIETE,UPDATE_SOCIETE,
  REMOVE_SOCIETE,ADD_MEMBER_TO_SOCIETE,REMOVE_MEMBER_TO_SOCIETE,ADD_COMPTES_GENERAUX_SOCIETE,
  Modifier_COMPTES_GENERAUX,AJOUTER_PLANCOMPATNLE_ELEMENT,MODIFIER_PLANCOMPATNLE_ELEMENT,
  SUPPRIMER_PLANCOMPATNLE_ELEMENT,AJOUTE_AGENCE,MODIFIER_AGENCE,SUPPRIMER_AGENCE,SUPPRIMER_BANQUE,
  MODIFIER_BANQUE,AJOUTER_BANQUE,SUPPRIMER_COMPTE_CANCAIRE,MODIFIER_COMPTE_CANCAIRE,AJOUTER_COMPTE_CANCAIRE,
  AJOUTE_CONTACT,MODIFIER_CONTACT,SUPPRIMER_CONTACT,AJOUTE_FOURNISSEUR,SUPPRIMER_FOURNISSEUR,MODIFIER_FOURNISSEUR,
  AJOUTE_CLIENT,MODIFIER_CLIENT,SUPPRIMER_CLIENT,AJOUTE_SALARIEE,SUPPRIMER_SALARIEE,MODIFIER_SALARIEE,
  AJOUTE_EXERCICE,MODIFIER_EXERCICE,AJOUTE_CODE_JOURNAL,MODIFIER_CODE_JOURNAL,SUPPRIMER_CODE_JOURNAL,
  AJOUTE_SAISIE_JOURNAL,AJOUTE_ALL_SAISIE_JOURNAL,MODIFIER_SAISIE_JOURNAL,SUPPRIMER_SAISIE_JOURNAL,
  AJOUTER_JOURNAL,MODIFIER_JOURNAL,SUPPRIMER_JOURNAL};
